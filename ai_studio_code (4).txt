// app/page.tsx
'use client';

import { useState, useRef } from 'react';
import { UploadIcon } from './(components)/icons/UploadIcon';
// Assumiamo di avere queste icone
// import { MicIcon, PauseIcon, PlayIcon, StopIcon } from './(components)/icons'; 

export default function DashboardPage() {
  const [recordingStatus, setRecordingStatus] = useState('idle'); // idle, recording, paused
  const mediaRecorderRef = useRef<MediaRecorder | null>(null);
  const audioChunksRef = useRef<Blob[]>([]);

  const handleStartRecording = async () => {
    const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
    mediaRecorderRef.current = new MediaRecorder(stream);
    mediaRecorderRef.current.ondataavailable = (event) => {
      audioChunksRef.current.push(event.data);
    };
    mediaRecorderRef.current.start();
    setRecordingStatus('recording');
  };

  const handlePauseRecording = () => {
    mediaRecorderRef.current?.pause();
    setRecordingStatus('paused');
  };

  const handleResumeRecording = () => {
    mediaRecorderRef.current?.resume();
    setRecordingStatus('recording');
  };

  const handleStopRecording = () => {
    mediaRecorderRef.current?.stop();
    // Qui potresti gestire il blob audio, es:
    // const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });
    // const audioUrl = URL.createObjectURL(audioBlob);
    audioChunksRef.current = [];
    setRecordingStatus('idle');
  };

  return (
    <div className="flex h-full flex-col items-center justify-center p-8">
      <div className="w-full max-w-4xl">
        <h1 className="text-3xl font-bold text-gray-800">Dashboard & Upload</h1>
        <p className="mt-2 text-gray-600">
          Carica i tuoi file di lezione (.txt) o registra l'audio e lascia che l'IA crei appunti perfetti per te.
        </p>

        <div className="mt-10 grid grid-cols-1 gap-8 md:grid-cols-2">
          {/* File Upload */}
          <div className="flex flex-col items-center justify-center rounded-2xl border-2 border-dashed border-gray-300 bg-white p-12 text-center">
            <UploadIcon className="h-12 w-12 text-indigo-500" />
            <p className="mt-4 font-semibold text-gray-700">Trascina qui il tuo file</p>
            <p className="text-sm text-gray-500">o clicca per selezionare</p>
            <input type="file" className="absolute h-full w-full opacity-0 cursor-pointer" />
          </div>

          {/* Registratore Audio */}
          <div className="flex flex-col items-center justify-center rounded-2xl border-2 border-dashed border-gray-300 bg-white p-12 text-center">
            {/* <MicIcon className="h-12 w-12 text-indigo-500" /> */}
            <p className="mt-4 font-semibold text-gray-700">Registra Audio</p>
            <div className="mt-4 flex space-x-4">
              {recordingStatus === 'idle' && (
                <button onClick={handleStartRecording} className="rounded-full bg-green-500 p-3 text-white">
                  {/* <PlayIcon className="h-6 w-6" /> */}
                  <span>Avvia</span>
                </button>
              )}
              {recordingStatus === 'recording' && (
                <button onClick={handlePauseRecording} className="rounded-full bg-yellow-500 p-3 text-white">
                  {/* <PauseIcon className="h-6 w-6" /> */}
                  <span>Pausa</span>
                </button>
              )}
              {recordingStatus === 'paused' && (
                <button onClick={handleResumeRecording} className="rounded-full bg-green-500 p-3 text-white">
                  {/* <PlayIcon className="h-6 w-6" /> */}
                  <span>Riprendi</span>
                </button>
              )}
              {(recordingStatus === 'recording' || recordingStatus === 'paused') && (
                <button onClick={handleStopRecording} className="rounded-full bg-red-500 p-3 text-white">
                  {/* <StopIcon className="h-6 w-6" /> */}
                  <span>Stop</span>
                </button>
              )}
            </div>
          </div>
        </div>

        <div className="mt-10 text-center">
          <button className="rounded-lg bg-indigo-600 px-8 py-3 text-lg font-semibold text-white shadow-md hover:bg-indigo-700">
            Genera Appunti con Gemini
          </button>
        </div>
      </div>
    </div>
  );
}